syntax = "proto3";
package messenger;
import "timestamp.proto";

option go_package = "satweave/messenger/common";

message Result {
  enum Status {
    OK = 0;
    FAIL = 1;
  }
  Status status = 1;
  int32 code = 2;
  string message = 3;
}

message Head {
  Timestamp timestamp = 1;
  uint64 term = 2;
}

message NilRequest {}

message NilResponse {
  Status status = 1;
}

message Status {
  int32 err_code = 1;
  string message = 2;
}

message MachineResource {
  int64 slot_number = 1;
}

message TaskManagerDescription {
  uint64 raft_id = 1;
  uint64 slot_number = 2;
  string host = 3;
  uint64 port = 4;
}

message ExecuteTask {
  string cls_name = 1;
  repeated InputEndpoints input_endpoints = 2;
  repeated OutputEndpoints output_endpoints = 3;
  repeated File resources = 4;
  File task_file = 5;
  string subtask_name = 6;
  int64 partition_idx = 7;
  // 所处节点，用 raft_id 表示
  uint64 locate = 8;
  // IP
  string host = 9;
  // Port
  uint64 port = 10;
  // 使用的worker
  uint64 worker_id = 11;
  uint64 task_manager_id = 12;
}

message InputEndpoints {
  string host = 1;
  uint64 port = 2;
  uint64 task_manager_id = 3;
  uint64 worker_id = 4;
}

message OutputEndpoints {
  string host = 1;
  uint64 port = 2;
  uint64 task_manager_id = 3;
  uint64 worker_id = 4;
}

// logical Task
message Task {
  string cls_name = 1;
  int64 currency = 2;
  repeated string input_tasks = 3;
  repeated File resources = 4;
  File task_file = 5;
  // 所处节点，用 raft_id 表示
  uint64 locate = 6;
  int64 slot_id = 7;
}

message File {
  string name = 1;
  bytes content = 2;
}

message RequiredSlotDescription {

}

enum DataType {
  PICKLE = 0;
  CHECKPOINT = 1;
  FINISH = 2;
}

message Record {
  string data_id = 1; // for filter
  DataType data_type = 2;
  bytes data = 3;
  uint64 timestamp = 4;
  int64 partition_key = 5; // for partitioning

  message KeyValue {
    repeated string keys = 1;
    repeated string values = 2;
  }

  message Checkpoint {
    uint64 id = 1;
    bool cancel_job = 2;
  }

  message Finish {

  }

}
