image: harbor.act.buaa.edu.cn/satweave/rocksdb-go19:6.28.2-alpine
stages:          # List of stages for jobs, and their order of execution
  - build
#  - test
  - docker-build
  - deploy

variables:
  DOCKER_REGISTRY: harbor.act.buaa.edu.cn
  DOCKERHUB_NAMESPACE: satweave
  BRANCH_NAME: $CI_COMMIT_REF_NAME
  COMMIT_SHA: $CI_COMMIT_SHA
  GIT_SSL_NO_VERIFY: "true"

before_script:
  - export GOPATH=$GOPATH:/usr/local/${CI_PROJECT_NAME}
  - export CPLUS_INCLUDE_PATH=${CPLUS_INCLUDE_PATH}:/usr/local/lib/rocksdb
  - export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/lib
  - export LIBRARY_PATH=${LIBRARY_PATH}:/usr/local/lib
  - export VERSION=`echo ${CI_COMMIT_TAG} | awk -F"_" '{print $1}'`
  - export GO111MODULE=on
  - export GOPROXY=https://goproxy.cn,direct

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  before_script:
    - go env -w GOMODCACHE=$(pwd)/.mod_cache/ GOPROXY=https://goproxy.cn,direct GOCACHE=$(pwd)/.go_cache/
  script:
    - echo "Compiling the code..."
    - go version
    - export CGO_CFLAGS="-I/usr/local/lib"
    - export CGO_LDFLAGS="-L/usr/local/lib -lrocksdb -lstdc++ -lm -lz -lbz2 -lsnappy -llz4 -lzstd"
    - go mod tidy
    - go build -o build/bin/satweave-sat-node satweave/sat-node
    - go build -o build/bin/satweave-cloud satweave/cloud
    - go build -o build/bin/satweave-client satweave/cli
    - echo "Compile complete."
  artifacts:
    paths:
      - build/
    when: always
    expire_in: 8 weeks
  cache:
    key: satweave_go_env
    paths:
      - .mod_cache/
      - .go_cache/

#unit-test-job:   # This job runs in the test stage.
#  stage: test
#  needs: []
#  script:
#    - go env -w GOMODCACHE=$(pwd)/.mod_cache/ GOPROXY=https://goproxy.cn,direct GOCACHE=$(pwd)/.go_cache/
#    - echo "Running unit tests..."
#    #    - golangci-lint --version
#    #    - golangci-lint run --out-format checkstyle ./... > report.xml & # run in background
#    - go mod tidy
#    - go test ./...  -coverprofile=cover.out -timeout=4m  # enable race test default
#    - ls
#  artifacts:
#    paths:
#      - cover.out
#      - report.xml
#    when: always
#    expire_in: 8 weeks
#  cache:
#    key: satweave_go_env
#    paths:
#      - .mod_cache/
#      - .go_cache/

satweave-docker-build:
  stage: docker-build
  needs: [build-job]
  #  needs: [build-job, unit-test-job]
  image: docker:19.03.0
  services:
     - name: docker:19.03.0-dind
       alias: thedockerhost
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: tcp://thedockerhost:2375
  before_script:
    - docker info
    - docker login -u $CI_REGISTRY_USER  -p $CI_REGISTRY_TOKEN $DOCKER_REGISTRY
    - export BUILD_NUMBER=${COMMIT_SHA:0:5}
  script:
    - mv ./build ./Dockerfile
    - mv ./conf ./Dockerfile
    - mv ./files ./Dockerfile
    - cd Dockerfile
    - ls ./build/bin
    - echo "build satweave-sat-node docker image"
    - export APP_NAME=satweave-sat-node
    - docker build -f satweave-sat-node-ci -t $DOCKER_REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:SNAPSHOT-$BRANCH_NAME-$BUILD_NUMBER .
    - docker push  $DOCKER_REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:SNAPSHOT-$BRANCH_NAME-$BUILD_NUMBER
    - docker tag $DOCKER_REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:SNAPSHOT-$BRANCH_NAME-$BUILD_NUMBER $DOCKER_REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:SNAPSHOT-latest
    - docker push $DOCKER_REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:SNAPSHOT-latest
    - echo "build satweave-cloud docker image"
    - export APP_NAME=satweave-cloud
    - docker build -f satweave-cloud-ci -t $DOCKER_REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:SNAPSHOT-$BRANCH_NAME-$BUILD_NUMBER .
    - docker push  $DOCKER_REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:SNAPSHOT-$BRANCH_NAME-$BUILD_NUMBER
    - docker tag $DOCKER_REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:SNAPSHOT-$BRANCH_NAME-$BUILD_NUMBER $DOCKER_REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:SNAPSHOT-latest
    - docker push $DOCKER_REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:SNAPSHOT-latest
    - echo "build satweave-client docker image"
    - export APP_NAME=satweave-client
    - docker build -f satweave-client-ci -t $DOCKER_REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:SNAPSHOT-$BRANCH_NAME-$BUILD_NUMBER .
    - docker push  $DOCKER_REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:SNAPSHOT-$BRANCH_NAME-$BUILD_NUMBER
    - docker tag $DOCKER_REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:SNAPSHOT-$BRANCH_NAME-$BUILD_NUMBER $DOCKER_REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:SNAPSHOT-latest
    - docker push $DOCKER_REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:SNAPSHOT-latest

deploy-job:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: on_success
      allow_failure: true
    - if: $CI_COMMIT_BRANCH != "main" && $CI_PIPELINE_SOURCE != 'merge_request_event'
      when: manual
      allow_failure: true
  needs: [satweave-docker-build]
  image:
    name: bitnami/kubectl:1.26
    entrypoint: [""]
  before_script:
    - cp $KUBE_CONFIG /.kube/config
  script:
    - echo "Deploying application..."
    - kubectl version
    - cd deploy/dev-ol
    - kubectl delete -f satweave-cloud.yaml || true
    - kubectl apply -f satweave-cloud.yaml
    - kubectl delete -f satweave-client.yaml || true
    - kubectl apply -f satweave-client.yaml
    - sleep 30
    - kubectl delete -f satweave-sat.yaml || true
    - kubectl apply -f satweave-sat.yaml
    - echo "Application successfully deployed."